{"ast":null,"code":"var _jsxFileName = \"/Users/Jomar_navarro/Downloads/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Homepage from \"./pages/Home\";\nimport EventsPage from \"./pages/Events\";\nimport EventDetailsPage from \"./pages/EventDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 24\n  }, this)\n}, {\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 24\n  }, this)\n}, {\n  path: \"/events\",\n  element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 30\n  }, this)\n}, {\n  path: \"/events/:eventId\",\n  element: /*#__PURE__*/_jsxDEV(EventDetailsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 39\n  }, this)\n}, {\n  path: \"/events/new\",\n  element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 34\n  }, this)\n}, {\n  path: \"/events/eventId/edit\",\n  element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 43\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Homepage","EventsPage","EventDetailsPage","NewEventPage","EditEventPage","jsxDEV","_jsxDEV","router","path","element","RootLayout","fileName","_jsxFileName","lineNumber","columnNumber","App","_c","$RefreshReg$"],"sources":["/Users/Jomar_navarro/Downloads/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Homepage from \"./pages/Home\";\nimport EventsPage from \"./pages/Events\";\nimport EventDetailsPage from \"./pages/EventDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\n\nconst router = createBrowserRouter([\n\t{ path: \"/\", element: <RootLayout /> },\n\t{ path: \"/\", element: <Homepage /> },\n\t{ path: \"/events\", element: <EventsPage /> },\n\t{ path: \"/events/:eventId\", element: <EventDetailsPage /> },\n\t{ path: \"/events/new\", element: <NewEventPage /> },\n\t{ path: \"/events/eventId/edit\", element: <EditEventPage /> },\n]);\n\nfunction App() {\n\treturn <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,gBAAgB,MAAM,qBAAqB;AAClD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGR,mBAAmB,CAAC,CAClC;EAAES,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEH,OAAA,CAACI,UAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EACtC;EAAEN,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEH,OAAA,CAACN,QAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EACpC;EAAEN,IAAI,EAAE,SAAS;EAAEC,OAAO,eAAEH,OAAA,CAACL,UAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EAC5C;EAAEN,IAAI,EAAE,kBAAkB;EAAEC,OAAO,eAAEH,OAAA,CAACJ,gBAAgB;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EAC3D;EAAEN,IAAI,EAAE,aAAa;EAAEC,OAAO,eAAEH,OAAA,CAACH,YAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EAClD;EAAEN,IAAI,EAAE,sBAAsB;EAAEC,OAAO,eAAEH,OAAA,CAACF,aAAa;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,CAC5D,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACd,oBAAOT,OAAA,CAACR,cAAc;IAACS,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1C;AAACE,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}